# Expo Web 构建 Dockerfile
FROM node:18-alpine AS builder

WORKDIR /app

# 安装Expo CLI
RUN npm install -g @expo/cli

# 复制package文件
COPY package*.json ./
COPY yarn.lock* ./

# 安装依赖
RUN if [ -f yarn.lock ]; then yarn install --frozen-lockfile; else npm ci; fi

# 复制源代码
COPY . .

# 构建Web版本
RUN npx expo export:web

# 生产阶段
FROM nginx:alpine

# 安装必要工具
RUN apk add --no-cache curl

# 复制构建好的文件
COPY --from=builder /app/web-build /usr/share/nginx/html

# 复制Nginx配置
COPY docker/nginx-mobile.conf /etc/nginx/conf.d/default.conf

# 创建非root用户
RUN adduser -D -s /bin/sh motor

# 更改目录权限
RUN chown -R motor:motor /var/cache/nginx && \
    chown -R motor:motor /var/log/nginx && \
    chown -R motor:motor /etc/nginx/conf.d && \
    chown -R motor:motor /usr/share/nginx/html

# 创建PID文件目录
RUN mkdir -p /var/run/nginx && chown -R motor:motor /var/run/nginx

# 暴露端口
EXPOSE 19006

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:19006/health || exit 1

# 启动nginx
CMD ["nginx", "-g", "daemon off;"]