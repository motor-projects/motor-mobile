name: CI/CD - Mobile App

on:
  push:
    branches: [main, develop]
    paths:
      - 'motor-mobile-app/**'
      - 'motor-shared/**'
  pull_request:
    branches: [main, develop]
    paths:
      - 'motor-mobile-app/**'
      - 'motor-shared/**'

env:
  NODE_VERSION: '18'
  EXPO_VERSION: '49.0.0'
  REGISTRY: ghcr.io
  IMAGE_NAME: motor-projects/mobile-web

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: |
            motor-mobile-app/package-lock.json
            motor-shared/package-lock.json

      - name: Setup Expo CLI
        run: npm install -g @expo/cli@latest

      - name: Install shared dependencies
        run: |
          cd motor-shared
          npm ci
          npm run build

      - name: Install mobile app dependencies
        run: |
          cd motor-mobile-app
          npm ci

      - name: Run linting
        run: |
          cd motor-mobile-app
          npm run lint

      - name: Run type checking
        run: |
          cd motor-mobile-app
          npm run type-check || echo "No type-check script found"

      - name: Run tests
        run: |
          cd motor-mobile-app
          npm run test || echo "No tests configured"

  build-web:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Expo CLI
        run: npm install -g @expo/cli@latest

      - name: Install shared dependencies
        run: |
          cd motor-shared
          npm ci
          npm run build

      - name: Install mobile app dependencies
        run: |
          cd motor-mobile-app
          npm ci

      - name: Build web version
        env:
          EXPO_USE_DEV_SERVER: false
        run: |
          cd motor-mobile-app
          npx expo export:web

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./motor-mobile-app
          file: ./motor-mobile-app/Dockerfile.web
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-android:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Expo CLI
        run: npm install -g @expo/cli@latest eas-cli@latest

      - name: Install dependencies
        run: |
          cd motor-shared && npm ci && npm run build
          cd ../motor-mobile-app && npm ci

      - name: Setup EAS
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          cd motor-mobile-app
          eas login --non-interactive

      - name: Build Android APK
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          cd motor-mobile-app
          eas build --platform android --profile ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }} --non-interactive

  build-ios:
    runs-on: macos-latest
    needs: test
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Expo CLI
        run: npm install -g @expo/cli@latest eas-cli@latest

      - name: Install dependencies
        run: |
          cd motor-shared && npm ci && npm run build
          cd ../motor-mobile-app && npm ci

      - name: Setup EAS
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          cd motor-mobile-app
          eas login --non-interactive

      - name: Build iOS
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          cd motor-mobile-app
          eas build --platform ios --profile production --non-interactive

  deploy-web-staging:
    runs-on: ubuntu-latest
    needs: build-web
    if: github.ref == 'refs/heads/develop'
    environment: staging

    steps:
      - name: Deploy mobile web to staging
        env:
          DEPLOY_HOST: ${{ secrets.STAGING_HOST }}
          DEPLOY_USER: ${{ secrets.STAGING_USER }}
          DEPLOY_KEY: ${{ secrets.STAGING_DEPLOY_KEY }}
        run: |
          echo "$DEPLOY_KEY" > deploy_key
          chmod 600 deploy_key
          
          ssh -i deploy_key -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST << 'EOF'
            cd /opt/motor-projects
            docker-compose -f docker-compose.staging.yml pull mobile-web
            docker-compose -f docker-compose.staging.yml up -d mobile-web
            docker system prune -f
          EOF
          
          rm -f deploy_key

  deploy-web-production:
    runs-on: ubuntu-latest
    needs: build-web
    if: github.ref == 'refs/heads/main'
    environment: production

    steps:
      - name: Deploy mobile web to production
        env:
          DEPLOY_HOST: ${{ secrets.PRODUCTION_HOST }}
          DEPLOY_USER: ${{ secrets.PRODUCTION_USER }}
          DEPLOY_KEY: ${{ secrets.PRODUCTION_DEPLOY_KEY }}
        run: |
          echo "$DEPLOY_KEY" > deploy_key
          chmod 600 deploy_key
          
          ssh -i deploy_key -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST << 'EOF'
            cd /opt/motor-projects
            docker-compose -f docker-compose.production.yml pull mobile-web
            docker-compose -f docker-compose.production.yml up -d mobile-web
            docker system prune -f
          EOF
          
          rm -f deploy_key

      - name: Notify deployment
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          channel: '#deployments'
          webhook_url: ${{ secrets.SLACK_WEBHOOK }}
        if: always()

  publish-expo:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Expo CLI
        run: npm install -g @expo/cli@latest

      - name: Install dependencies
        run: |
          cd motor-shared && npm ci && npm run build
          cd ../motor-mobile-app && npm ci

      - name: Publish to Expo
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
        run: |
          cd motor-mobile-app
          npx expo login --non-interactive
          npx expo publish --release-channel ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}