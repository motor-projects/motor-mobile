apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  namespace: motorcycle-system
  labels:
    app: backend
    version: v1
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: backend
      version: v1
  template:
    metadata:
      labels:
        app: backend
        version: v1
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: backend
        image: motorcycle/backend:latest
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
          name: http
          protocol: TCP
        env:
        - name: NODE_ENV
          valueFrom:
            configMapKeyRef:
              name: motorcycle-config
              key: NODE_ENV
        - name: MONGODB_URI
          value: "mongodb://mongodb-service:27017/$(MONGODB_DATABASE)"
        - name: MONGODB_DATABASE
          valueFrom:
            configMapKeyRef:
              name: motorcycle-config
              key: MONGODB_DATABASE
        - name: REDIS_URL
          value: "redis://$(REDIS_HOST):$(REDIS_PORT)"
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: motorcycle-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: motorcycle-config
              key: REDIS_PORT
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: motorcycle-secrets
              key: JWT_SECRET
        - name: API_KEY
          valueFrom:
            secretKeyRef:
              name: motorcycle-secrets
              key: API_KEY
        - name: SENTRY_DSN
          valueFrom:
            secretKeyRef:
              name: motorcycle-secrets
              key: SENTRY_DSN
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: motorcycle-config
              key: LOG_LEVEL
        resources:
          requests:
            memory: "256Mi"
            cpu: "200m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: app-logs
          mountPath: /app/logs
      volumes:
      - name: app-logs
        emptyDir: {}
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "app"
        operator: "Equal"
        value: "backend"
        effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  namespace: motorcycle-system
  labels:
    app: backend
spec:
  selector:
    app: backend
  ports:
  - name: http
    port: 3000
    targetPort: 3000
    protocol: TCP
  type: ClusterIP