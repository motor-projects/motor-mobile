apiVersion: batch/v1
kind: CronJob
metadata:
  name: mongodb-backup
  namespace: motorcycle-system
  labels:
    app: mongodb-backup
spec:
  schedule: "0 2 * * *"  # 每天凌晨2点执行
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: mongodb-backup
        spec:
          restartPolicy: OnFailure
          containers:
          - name: mongodb-backup
            image: mongo:6.0
            command:
            - /bin/bash
            - -c
            - |
              set -e
              
              # 设置变量
              BACKUP_DATE=$(date +%Y%m%d_%H%M%S)
              BACKUP_DIR="/backup/mongodb_${BACKUP_DATE}"
              S3_BUCKET="motorcycle-backups"
              
              echo "开始备份 MongoDB 数据..."
              echo "备份时间: $(date)"
              echo "备份目录: ${BACKUP_DIR}"
              
              # 创建备份目录
              mkdir -p "${BACKUP_DIR}"
              
              # 执行备份
              mongodump --host mongodb-service:27017 \
                        --username ${MONGO_ROOT_USERNAME} \
                        --password ${MONGO_ROOT_PASSWORD} \
                        --authenticationDatabase admin \
                        --db motorcycle \
                        --out "${BACKUP_DIR}"
              
              # 压缩备份文件
              cd /backup
              tar -czf "mongodb_${BACKUP_DATE}.tar.gz" "mongodb_${BACKUP_DATE}"
              rm -rf "mongodb_${BACKUP_DATE}"
              
              # 上传到 S3
              aws s3 cp "mongodb_${BACKUP_DATE}.tar.gz" "s3://${S3_BUCKET}/mongodb/"
              
              # 清理本地文件
              rm -f "mongodb_${BACKUP_DATE}.tar.gz"
              
              # 清理旧备份 (保留30天)
              aws s3 ls "s3://${S3_BUCKET}/mongodb/" | while read -r line; do
                fileName=$(echo $line | awk '{print $4}')
                fileDate=$(echo $fileName | grep -o '[0-9]\{8\}_[0-9]\{6\}')
                if [[ -n "$fileDate" ]]; then
                  fileDateUnix=$(date -d "${fileDate:0:8}" +%s)
                  thirtyDaysAgo=$(date -d "30 days ago" +%s)
                  if [[ $fileDateUnix -lt $thirtyDaysAgo ]]; then
                    echo "删除旧备份: $fileName"
                    aws s3 rm "s3://${S3_BUCKET}/mongodb/$fileName"
                  fi
                fi
              done
              
              echo "备份完成: $(date)"
              
            env:
            - name: MONGO_ROOT_USERNAME
              valueFrom:
                secretKeyRef:
                  name: motorcycle-secrets
                  key: MONGO_ROOT_USERNAME
            - name: MONGO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: motorcycle-secrets
                  key: MONGO_ROOT_PASSWORD
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-credentials
                  key: secret-access-key
            - name: AWS_DEFAULT_REGION
              value: "us-west-2"
            volumeMounts:
            - name: backup-storage
              mountPath: /backup
            resources:
              requests:
                memory: "256Mi"
                cpu: "100m"
              limits:
                memory: "512Mi"
                cpu: "200m"
          volumes:
          - name: backup-storage
            persistentVolumeClaim:
              claimName: mongodb-backup-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-backup-pvc
  namespace: motorcycle-system
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 20Gi
  storageClassName: fast-ssd
---
# MongoDB 恢复 Job 模板
apiVersion: batch/v1
kind: Job
metadata:
  name: mongodb-restore
  namespace: motorcycle-system
  labels:
    app: mongodb-restore
spec:
  template:
    metadata:
      labels:
        app: mongodb-restore
    spec:
      restartPolicy: Never
      containers:
      - name: mongodb-restore
        image: mongo:6.0
        command:
        - /bin/bash
        - -c
        - |
          set -e
          
          # 从环境变量获取备份文件名
          BACKUP_FILE=${BACKUP_FILE:-"latest"}
          S3_BUCKET="motorcycle-backups"
          RESTORE_DIR="/restore"
          
          echo "开始恢复 MongoDB 数据..."
          echo "恢复时间: $(date)"
          echo "备份文件: ${BACKUP_FILE}"
          
          # 创建恢复目录
          mkdir -p "${RESTORE_DIR}"
          
          # 从 S3 下载备份文件
          if [[ "$BACKUP_FILE" == "latest" ]]; then
            BACKUP_FILE=$(aws s3 ls "s3://${S3_BUCKET}/mongodb/" --recursive | sort | tail -1 | awk '{print $4}' | xargs basename)
            echo "使用最新备份: ${BACKUP_FILE}"
          fi
          
          aws s3 cp "s3://${S3_BUCKET}/mongodb/${BACKUP_FILE}" "${RESTORE_DIR}/"
          
          # 解压备份文件
          cd "${RESTORE_DIR}"
          tar -xzf "${BACKUP_FILE}"
          
          # 获取解压后的目录名
          BACKUP_DIR_NAME=$(tar -tzf "${BACKUP_FILE}" | head -1 | cut -f1 -d"/")
          
          # 执行恢复
          mongorestore --host mongodb-service:27017 \
                       --username ${MONGO_ROOT_USERNAME} \
                       --password ${MONGO_ROOT_PASSWORD} \
                       --authenticationDatabase admin \
                       --db motorcycle \
                       --drop \
                       "${BACKUP_DIR_NAME}/motorcycle"
          
          echo "恢复完成: $(date)"
          
        env:
        - name: MONGO_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: motorcycle-secrets
              key: MONGO_ROOT_USERNAME
        - name: MONGO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: motorcycle-secrets
              key: MONGO_ROOT_PASSWORD
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: secret-access-key
        - name: AWS_DEFAULT_REGION
          value: "us-west-2"
        - name: BACKUP_FILE
          value: "latest"  # 可以通过环境变量指定具体的备份文件
        volumeMounts:
        - name: restore-storage
          mountPath: /restore
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
      volumes:
      - name: restore-storage
        emptyDir: {}
---
# AWS 凭证密钥
apiVersion: v1
kind: Secret
metadata:
  name: aws-credentials
  namespace: motorcycle-system
type: Opaque
data:
  # 请替换为实际的 AWS 凭证 (base64 编码)
  access-key-id: QUtJQUlPU0ZPRE5ON0VYQU1QTEU=  # AKIAIOSFODNN7EXAMPLE
  secret-access-key: d0phbHJYVXRuRkVNSS9LN01ERU5HL2JQeFJmaUNZRVhBTVBMRUtFWQ==  # wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY